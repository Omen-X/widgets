@import "bourbon"


//________ VARIABLES ________

// Width

$w-content_max: 1170px
$w-content_padding: ($w-content_max / 1px + 30)*1px
$w-min: 320px


// Fonts

$f-main: 'OpenSans', 'Helvetica', 'Arial', sans-serif
$fs-main: 16px


// Colors

$c-accent: #4452DF
$c-accent_d: darken($c-accent, 5%)
$c-accent_l: lighten($c-accent, 5%)

$c-accent-2: #3E89DD
$c-accent-2_d: darken($c-accent-2, 5%)
$c-accent-2_l: lighten($c-accent-2, 5%)

$c-text: #3E3E3E
$c-title: #F4F4F4

$c-border: #122CEC

$c-text: #424242
$c-link: #6D66FF

$c-bg-body: #F3F3F3

$c-placeholder: #BABABA
$c-placeholder_active: #000
$c-placeholder_invalid: #FC5E5E


//________ MIXINS ________

	/// Define default font-size and line-height for tags, include different breakpoints
	/// @param {Map} $fs-map - Map with all breakpoints and font-sizes
	/// @param {Map} [$fs-breakpoints = $breakpoints] - Map with breakpoints

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints)
	@each $fs-breakpoint, $fs-value in $fs-map
		@if $fs-breakpoint == default
			@include font-size_make($fs-value)
		@else
			@if map-has-key($fs-breakpoints, $fs-breakpoint)
				$fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint)

			@media only screen and (min-width : $fs-breakpoint)
				@include font-size_make($fs-value)

	/// Utility mixin for 'font-size' mixin

@mixin font-size_make($fs-value)
	@if type-of($fs-value) == 'list'
		font-size: nth($fs-value, 1)
		@if (length($fs-value) > 1)
			line-height: nth($fs-value, 2)

	@else
		font-size: $fs-value


	// Last string fading
	// @param {Number} $fade-count - Number of visible strings
	// @param {Num with em} [$fade -in = 1.2em] - Line-height in em
	// @param {Number} [$fade-fs = $fs-main] - Font value
	// @param {Color} [$fade-color = $c-bg-body] - Color of text background
	// 
@mixin fade-text($fade-count, $fade-lh: 1.2em,$fade-fs: $fs-main, $fade-c: $c-bg-body)
	height: em($fade-count * ($fade-fs * $fade-lh), $fade-fs)

		&:after
			content: ''
			display: block
			position: absolute
			bottom: 0
			right: 0
			width: 55%
			height: $fade-lh
			background: linear-gradient(to right, rgba(255, 255, 255, 0), $fade-c 100%)


	// Height relative to width, for empty block
	// based on pseudoclass with padding
	// useful for img-containers

@mixin height-epmty($height)
	position: relative
	overflow: hidden
	
	&:before
		content: ''
		display: block
		position: relative
		opacity: 0
		padding-top: $height+%


	// Height relative to width, for not empty block
	// if for container using paddings they won't inlcuded in this height
	// TODO: problem with border too! when included

@mixin height($height)
	overflow: hidden

	&:before
		content: ''
		float: left
		padding-top: $height+%


//________ FUNCTIONS ________

	/// Define property's in em's
	/// @param {Number} $pix - Value of required value (units are not needed) 
	/// @param {Number} [$parent = 16] - Value of parent's block (omit if it's default),
	///         if you define line-height - you must always indicate this param with the value
	///         of font-size, which have this element (not parent)
	///         if font-size of parent is '0', don't use this func
	/// @returns {Value in em}

@function em($pix, $parent: ($fs-main/1px))
	@return ($pix/$parent)*1em



//________ SUPPORT CLASSES ________

	// Max width for content (container for content)
.content-w
	max-width: $w-content_max
	min-width: $w-min
	margin: 0 auto

	// paddings when content have full width of viewport
	@media only screen and (max-width : $w-content_padding)
		padding-left: 15px
		padding-right: 15px

.hidden
	display: none !important

.invisible
	opacity: 0 !important

.clearfix
	&:before
		content: ""
		display: table

	&:after
		content: ""
		display: table
		clear: both

	// Parent of inline-blocks, fix space beetween them
.ic-t
	font-size: 0

	> *
		vertical-align: top
		font-size: $fs-main

.ic-m
	font-size: 0

	> *
		vertical-align: middle
		font-size: $fs-main

	// Negative paddings for bootstrap grid container, add to parent of 'container'
.np
	margin-left: -15px
	margin-right: -15px

	// Responsive video container,
	// aspect ratio - 16:9 
.vc
	position: relative
	padding-bottom: 56.25%
	height: 0

	iframe
		position: absolute
		top: 0
		left: 0
		width: 100%
		height: 100%

	// Vertical align in container
.va
	position: relative

	&:after
		display: inline-block
		vertical-align: middle
		width: 0
		height: 100%
